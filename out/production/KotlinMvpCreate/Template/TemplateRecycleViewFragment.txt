package $packagename

import android.os.Message
import com.lzy.okgo.OkGo
import com.lzy.okgo.callback.StringCallback
import com.lzy.okgo.model.Response
import com.mtjsoft.www.kotlinmvputils.adapter.HHBaseRecyclerViewAdapter
import com.mtjsoft.www.kotlinmvputils.base.BaseRecycleviewFragment
import com.mtjsoft.www.kotlinmvputils.imp.AndCallBackListImp
import com.mtjsoft.www.kotlinmvputils.utils.AndModelUtils
import $modelpackagename.$nameModel
import $adapterpackagename.$nameAdapter

/**
 * @author $author
 * @Package $packagename
 * @date $date
 */

 class $nameRecycleViewFragment : BaseRecycleviewFragment<$nameModel>(){

     override fun loadActivityInfo() {

              }

              override fun getListDataInThread(pageIndex: Int, callback: AndCallBackListImp<$nameModel>) {
                  OkGo.get<String>("" + pageIndex)
                          .execute(object : StringCallback() {
                              override fun onSuccess(response: Response<String>?) {
                                  val list: List<$nameModel> = AndModelUtils.getModelList2Gson("error", "false",
                                          "results", $nameModel::class.java, response!!.body().toString())
                                  callback.onSuccess(list)
                              }

                              override fun onError(response: Response<String>?) {
                                  super.onError(response)
                                  callback.onError("")
                              }
                          })
              }

              override fun instanceAdapter(list: List<$nameModel>): HHBaseRecyclerViewAdapter<$nameModel>{
                  return $nameAdapter(getContext(),list)
              }

              override fun setItemDecoration(): Int {
                  return 10
              }

              override fun setPageSize(): Int {
                  return 10
              }

              override fun setLayoutManagerType(): Int {
                  return 0
              }

              override fun setCount(): Int {
                  return 2
              }

              override fun processHandlerMsg(msg: Message) {
              }

 }